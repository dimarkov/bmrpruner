# Hyperparameters follow the classic Nature DQN, but we modify as necessary to
# match those used in Rainbow (Hessel et al., 2018), to ensure apples-to-apples
# comparison.
import dopamine.discrete_domains.atari_lib
import dopamine.discrete_domains.run_experiment
import dopamine.jax.agents.dqn.dqn_agent
import dopamine.jax.networks
import dopamine.replay_memory.circular_replay_buffer
import jaxpruner.baselines.dopamine.sparse_util

JaxDQNAgent.network=@networks.NatureDQNNetwork # CNN encoder
JaxDQNAgent.gamma = 0.99
JaxDQNAgent.update_horizon = 1
JaxDQNAgent.min_replay_history = 20000  # agent steps
JaxDQNAgent.target_update_period = 8000  # agent steps
JaxDQNAgent.update_period = 4
JaxDQNAgent.epsilon_train = 0.01
JaxDQNAgent.epsilon_eval = 0.001
JaxDQNAgent.epsilon_decay_period = 250000  # agent steps

# Note: We are using the Adam optimizer by default for JaxDQN, which differs
#       from the original NatureDQN and the dopamine TensorFlow version. In
#       the experiments we have ran, we have found that using Adam yields
#       improved training performance.
JaxDQNAgent.optimizer = 'adam'
# Empty list allows all.
JaxDQNAgent.collector_allowlist = []
create_optimizer.learning_rate = 6.25e-5
create_optimizer.eps = 1.5e-4

atari_lib.create_atari_environment.game_name = 'MsPacman'
# Sticky actions with probability 0.25, as suggested by (Machado et al., 2017).
atari_lib.create_atari_environment.sticky_actions = True
create_agent.agent_name = 'jaxpruner_dqn'
create_runner.schedule = 'continuous_train'
create_agent.debug_mode = True
Runner.num_iterations = 40
Runner.training_steps = 250000  # agent steps
Runner.max_steps_per_episode = 27000  # agent steps

create_updater_from_config.pruner_type='magnitude'
create_updater_from_config.dist_type='erk'
create_updater_from_config.update_start_step=500000
create_updater_from_config.update_end_step=2000000
create_updater_from_config.update_freq=1000
# Use these for dynamic sparse training algorithms.
# create_updater_from_config.update_start_step=1
# create_updater_from_config.update_freq=5000
# create_updater_from_config.drop_fracion=0.3
create_updater_from_config.sparsity=0.98

OutOfGraphReplayBuffer.replay_capacity = 1000000
OutOfGraphReplayBuffer.batch_size = 32
